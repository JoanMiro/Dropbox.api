// <auto-generated>
// Auto-generated by StoneAPI, do not modify.
// </auto-generated>

namespace Dropbox.Api.Account
{
    using sys = System;
    using col = System.Collections.Generic;
    using re = System.Text.RegularExpressions;

    using enc = Dropbox.Api.Stone;

    /// <summary>
    /// <para>The set profile photo error object</para>
    /// </summary>
    public class SetProfilePhotoError
    {
        #pragma warning disable 108

        /// <summary>
        /// <para>The encoder instance.</para>
        /// </summary>
        internal static enc.StructEncoder<SetProfilePhotoError> Encoder = new SetProfilePhotoErrorEncoder();

        /// <summary>
        /// <para>The decoder instance.</para>
        /// </summary>
        internal static enc.StructDecoder<SetProfilePhotoError> Decoder = new SetProfilePhotoErrorDecoder();

        /// <summary>
        /// <para>Initializes a new instance of the <see cref="SetProfilePhotoError" />
        /// class.</para>
        /// </summary>
        public SetProfilePhotoError()
        {
        }

        /// <summary>
        /// <para>Gets a value indicating whether this instance is FileTypeError</para>
        /// </summary>
        public bool IsFileTypeError
        {
            get
            {
                return this is FileTypeError;
            }
        }

        /// <summary>
        /// <para>Gets this instance as a FileTypeError, or <c>null</c>.</para>
        /// </summary>
        public FileTypeError AsFileTypeError
        {
            get
            {
                return this as FileTypeError;
            }
        }

        /// <summary>
        /// <para>Gets a value indicating whether this instance is FileSizeError</para>
        /// </summary>
        public bool IsFileSizeError
        {
            get
            {
                return this is FileSizeError;
            }
        }

        /// <summary>
        /// <para>Gets this instance as a FileSizeError, or <c>null</c>.</para>
        /// </summary>
        public FileSizeError AsFileSizeError
        {
            get
            {
                return this as FileSizeError;
            }
        }

        /// <summary>
        /// <para>Gets a value indicating whether this instance is DimensionError</para>
        /// </summary>
        public bool IsDimensionError
        {
            get
            {
                return this is DimensionError;
            }
        }

        /// <summary>
        /// <para>Gets this instance as a DimensionError, or <c>null</c>.</para>
        /// </summary>
        public DimensionError AsDimensionError
        {
            get
            {
                return this as DimensionError;
            }
        }

        /// <summary>
        /// <para>Gets a value indicating whether this instance is ThumbnailError</para>
        /// </summary>
        public bool IsThumbnailError
        {
            get
            {
                return this is ThumbnailError;
            }
        }

        /// <summary>
        /// <para>Gets this instance as a ThumbnailError, or <c>null</c>.</para>
        /// </summary>
        public ThumbnailError AsThumbnailError
        {
            get
            {
                return this as ThumbnailError;
            }
        }

        /// <summary>
        /// <para>Gets a value indicating whether this instance is TransientError</para>
        /// </summary>
        public bool IsTransientError
        {
            get
            {
                return this is TransientError;
            }
        }

        /// <summary>
        /// <para>Gets this instance as a TransientError, or <c>null</c>.</para>
        /// </summary>
        public TransientError AsTransientError
        {
            get
            {
                return this as TransientError;
            }
        }

        /// <summary>
        /// <para>Gets a value indicating whether this instance is Other</para>
        /// </summary>
        public bool IsOther
        {
            get
            {
                return this is Other;
            }
        }

        /// <summary>
        /// <para>Gets this instance as a Other, or <c>null</c>.</para>
        /// </summary>
        public Other AsOther
        {
            get
            {
                return this as Other;
            }
        }

        #region Encoder class

        /// <summary>
        /// <para>Encoder for  <see cref="SetProfilePhotoError" />.</para>
        /// </summary>
        private class SetProfilePhotoErrorEncoder : enc.StructEncoder<SetProfilePhotoError>
        {
            /// <summary>
            /// <para>Encode fields of given value.</para>
            /// </summary>
            /// <param name="value">The value.</param>
            /// <param name="writer">The writer.</param>
            public override void EncodeFields(SetProfilePhotoError value, enc.IJsonWriter writer)
            {
                if (value is FileTypeError)
                {
                    WriteProperty(".tag", "file_type_error", writer, enc.StringEncoder.Instance);
                    FileTypeError.Encoder.EncodeFields((FileTypeError)value, writer);
                    return;
                }
                if (value is FileSizeError)
                {
                    WriteProperty(".tag", "file_size_error", writer, enc.StringEncoder.Instance);
                    FileSizeError.Encoder.EncodeFields((FileSizeError)value, writer);
                    return;
                }
                if (value is DimensionError)
                {
                    WriteProperty(".tag", "dimension_error", writer, enc.StringEncoder.Instance);
                    DimensionError.Encoder.EncodeFields((DimensionError)value, writer);
                    return;
                }
                if (value is ThumbnailError)
                {
                    WriteProperty(".tag", "thumbnail_error", writer, enc.StringEncoder.Instance);
                    ThumbnailError.Encoder.EncodeFields((ThumbnailError)value, writer);
                    return;
                }
                if (value is TransientError)
                {
                    WriteProperty(".tag", "transient_error", writer, enc.StringEncoder.Instance);
                    TransientError.Encoder.EncodeFields((TransientError)value, writer);
                    return;
                }
                if (value is Other)
                {
                    WriteProperty(".tag", "other", writer, enc.StringEncoder.Instance);
                    Other.Encoder.EncodeFields((Other)value, writer);
                    return;
                }
                throw new sys.InvalidOperationException();
            }
        }

        #endregion

        #region Decoder class

        /// <summary>
        /// <para>Decoder for  <see cref="SetProfilePhotoError" />.</para>
        /// </summary>
        private class SetProfilePhotoErrorDecoder : enc.UnionDecoder<SetProfilePhotoError>
        {
            /// <summary>
            /// <para>Create a new instance of type <see cref="SetProfilePhotoError" />.</para>
            /// </summary>
            /// <returns>The struct instance.</returns>
            protected override SetProfilePhotoError Create()
            {
                return new SetProfilePhotoError();
            }

            /// <summary>
            /// <para>Decode based on given tag.</para>
            /// </summary>
            /// <param name="tag">The tag.</param>
            /// <param name="reader">The json reader.</param>
            /// <returns>The decoded object.</returns>
            protected override SetProfilePhotoError Decode(string tag, enc.IJsonReader reader)
            {
                switch (tag)
                {
                    case "file_type_error":
                        return FileTypeError.Decoder.DecodeFields(reader);
                    case "file_size_error":
                        return FileSizeError.Decoder.DecodeFields(reader);
                    case "dimension_error":
                        return DimensionError.Decoder.DecodeFields(reader);
                    case "thumbnail_error":
                        return ThumbnailError.Decoder.DecodeFields(reader);
                    case "transient_error":
                        return TransientError.Decoder.DecodeFields(reader);
                    default:
                        return Other.Decoder.DecodeFields(reader);
                }
            }
        }

        #endregion

        /// <summary>
        /// <para>File cannot be set as profile photo.</para>
        /// </summary>
        public sealed class FileTypeError : SetProfilePhotoError
        {
            #pragma warning disable 108

            /// <summary>
            /// <para>The encoder instance.</para>
            /// </summary>
            internal static enc.StructEncoder<FileTypeError> Encoder = new FileTypeErrorEncoder();

            /// <summary>
            /// <para>The decoder instance.</para>
            /// </summary>
            internal static enc.StructDecoder<FileTypeError> Decoder = new FileTypeErrorDecoder();

            /// <summary>
            /// <para>Initializes a new instance of the <see cref="FileTypeError" />
            /// class.</para>
            /// </summary>
            private FileTypeError()
            {
            }

            /// <summary>
            /// <para>A singleton instance of FileTypeError</para>
            /// </summary>
            public static readonly FileTypeError Instance = new FileTypeError();

            #region Encoder class

            /// <summary>
            /// <para>Encoder for  <see cref="FileTypeError" />.</para>
            /// </summary>
            private class FileTypeErrorEncoder : enc.StructEncoder<FileTypeError>
            {
                /// <summary>
                /// <para>Encode fields of given value.</para>
                /// </summary>
                /// <param name="value">The value.</param>
                /// <param name="writer">The writer.</param>
                public override void EncodeFields(FileTypeError value, enc.IJsonWriter writer)
                {
                }
            }

            #endregion

            #region Decoder class

            /// <summary>
            /// <para>Decoder for  <see cref="FileTypeError" />.</para>
            /// </summary>
            private class FileTypeErrorDecoder : enc.StructDecoder<FileTypeError>
            {
                /// <summary>
                /// <para>Create a new instance of type <see cref="FileTypeError" />.</para>
                /// </summary>
                /// <returns>The struct instance.</returns>
                protected override FileTypeError Create()
                {
                    return FileTypeError.Instance;
                }

            }

            #endregion
        }

        /// <summary>
        /// <para>File cannot exceed 10 MB.</para>
        /// </summary>
        public sealed class FileSizeError : SetProfilePhotoError
        {
            #pragma warning disable 108

            /// <summary>
            /// <para>The encoder instance.</para>
            /// </summary>
            internal static enc.StructEncoder<FileSizeError> Encoder = new FileSizeErrorEncoder();

            /// <summary>
            /// <para>The decoder instance.</para>
            /// </summary>
            internal static enc.StructDecoder<FileSizeError> Decoder = new FileSizeErrorDecoder();

            /// <summary>
            /// <para>Initializes a new instance of the <see cref="FileSizeError" />
            /// class.</para>
            /// </summary>
            private FileSizeError()
            {
            }

            /// <summary>
            /// <para>A singleton instance of FileSizeError</para>
            /// </summary>
            public static readonly FileSizeError Instance = new FileSizeError();

            #region Encoder class

            /// <summary>
            /// <para>Encoder for  <see cref="FileSizeError" />.</para>
            /// </summary>
            private class FileSizeErrorEncoder : enc.StructEncoder<FileSizeError>
            {
                /// <summary>
                /// <para>Encode fields of given value.</para>
                /// </summary>
                /// <param name="value">The value.</param>
                /// <param name="writer">The writer.</param>
                public override void EncodeFields(FileSizeError value, enc.IJsonWriter writer)
                {
                }
            }

            #endregion

            #region Decoder class

            /// <summary>
            /// <para>Decoder for  <see cref="FileSizeError" />.</para>
            /// </summary>
            private class FileSizeErrorDecoder : enc.StructDecoder<FileSizeError>
            {
                /// <summary>
                /// <para>Create a new instance of type <see cref="FileSizeError" />.</para>
                /// </summary>
                /// <returns>The struct instance.</returns>
                protected override FileSizeError Create()
                {
                    return FileSizeError.Instance;
                }

            }

            #endregion
        }

        /// <summary>
        /// <para>Image must be larger than 128 x 128.</para>
        /// </summary>
        public sealed class DimensionError : SetProfilePhotoError
        {
            #pragma warning disable 108

            /// <summary>
            /// <para>The encoder instance.</para>
            /// </summary>
            internal static enc.StructEncoder<DimensionError> Encoder = new DimensionErrorEncoder();

            /// <summary>
            /// <para>The decoder instance.</para>
            /// </summary>
            internal static enc.StructDecoder<DimensionError> Decoder = new DimensionErrorDecoder();

            /// <summary>
            /// <para>Initializes a new instance of the <see cref="DimensionError" />
            /// class.</para>
            /// </summary>
            private DimensionError()
            {
            }

            /// <summary>
            /// <para>A singleton instance of DimensionError</para>
            /// </summary>
            public static readonly DimensionError Instance = new DimensionError();

            #region Encoder class

            /// <summary>
            /// <para>Encoder for  <see cref="DimensionError" />.</para>
            /// </summary>
            private class DimensionErrorEncoder : enc.StructEncoder<DimensionError>
            {
                /// <summary>
                /// <para>Encode fields of given value.</para>
                /// </summary>
                /// <param name="value">The value.</param>
                /// <param name="writer">The writer.</param>
                public override void EncodeFields(DimensionError value, enc.IJsonWriter writer)
                {
                }
            }

            #endregion

            #region Decoder class

            /// <summary>
            /// <para>Decoder for  <see cref="DimensionError" />.</para>
            /// </summary>
            private class DimensionErrorDecoder : enc.StructDecoder<DimensionError>
            {
                /// <summary>
                /// <para>Create a new instance of type <see cref="DimensionError" />.</para>
                /// </summary>
                /// <returns>The struct instance.</returns>
                protected override DimensionError Create()
                {
                    return DimensionError.Instance;
                }

            }

            #endregion
        }

        /// <summary>
        /// <para>Image could not be thumbnailed.</para>
        /// </summary>
        public sealed class ThumbnailError : SetProfilePhotoError
        {
            #pragma warning disable 108

            /// <summary>
            /// <para>The encoder instance.</para>
            /// </summary>
            internal static enc.StructEncoder<ThumbnailError> Encoder = new ThumbnailErrorEncoder();

            /// <summary>
            /// <para>The decoder instance.</para>
            /// </summary>
            internal static enc.StructDecoder<ThumbnailError> Decoder = new ThumbnailErrorDecoder();

            /// <summary>
            /// <para>Initializes a new instance of the <see cref="ThumbnailError" />
            /// class.</para>
            /// </summary>
            private ThumbnailError()
            {
            }

            /// <summary>
            /// <para>A singleton instance of ThumbnailError</para>
            /// </summary>
            public static readonly ThumbnailError Instance = new ThumbnailError();

            #region Encoder class

            /// <summary>
            /// <para>Encoder for  <see cref="ThumbnailError" />.</para>
            /// </summary>
            private class ThumbnailErrorEncoder : enc.StructEncoder<ThumbnailError>
            {
                /// <summary>
                /// <para>Encode fields of given value.</para>
                /// </summary>
                /// <param name="value">The value.</param>
                /// <param name="writer">The writer.</param>
                public override void EncodeFields(ThumbnailError value, enc.IJsonWriter writer)
                {
                }
            }

            #endregion

            #region Decoder class

            /// <summary>
            /// <para>Decoder for  <see cref="ThumbnailError" />.</para>
            /// </summary>
            private class ThumbnailErrorDecoder : enc.StructDecoder<ThumbnailError>
            {
                /// <summary>
                /// <para>Create a new instance of type <see cref="ThumbnailError" />.</para>
                /// </summary>
                /// <returns>The struct instance.</returns>
                protected override ThumbnailError Create()
                {
                    return ThumbnailError.Instance;
                }

            }

            #endregion
        }

        /// <summary>
        /// <para>Temporary infrastructure failure, please retry.</para>
        /// </summary>
        public sealed class TransientError : SetProfilePhotoError
        {
            #pragma warning disable 108

            /// <summary>
            /// <para>The encoder instance.</para>
            /// </summary>
            internal static enc.StructEncoder<TransientError> Encoder = new TransientErrorEncoder();

            /// <summary>
            /// <para>The decoder instance.</para>
            /// </summary>
            internal static enc.StructDecoder<TransientError> Decoder = new TransientErrorDecoder();

            /// <summary>
            /// <para>Initializes a new instance of the <see cref="TransientError" />
            /// class.</para>
            /// </summary>
            private TransientError()
            {
            }

            /// <summary>
            /// <para>A singleton instance of TransientError</para>
            /// </summary>
            public static readonly TransientError Instance = new TransientError();

            #region Encoder class

            /// <summary>
            /// <para>Encoder for  <see cref="TransientError" />.</para>
            /// </summary>
            private class TransientErrorEncoder : enc.StructEncoder<TransientError>
            {
                /// <summary>
                /// <para>Encode fields of given value.</para>
                /// </summary>
                /// <param name="value">The value.</param>
                /// <param name="writer">The writer.</param>
                public override void EncodeFields(TransientError value, enc.IJsonWriter writer)
                {
                }
            }

            #endregion

            #region Decoder class

            /// <summary>
            /// <para>Decoder for  <see cref="TransientError" />.</para>
            /// </summary>
            private class TransientErrorDecoder : enc.StructDecoder<TransientError>
            {
                /// <summary>
                /// <para>Create a new instance of type <see cref="TransientError" />.</para>
                /// </summary>
                /// <returns>The struct instance.</returns>
                protected override TransientError Create()
                {
                    return TransientError.Instance;
                }

            }

            #endregion
        }

        /// <summary>
        /// <para>The other object</para>
        /// </summary>
        public sealed class Other : SetProfilePhotoError
        {
            #pragma warning disable 108

            /// <summary>
            /// <para>The encoder instance.</para>
            /// </summary>
            internal static enc.StructEncoder<Other> Encoder = new OtherEncoder();

            /// <summary>
            /// <para>The decoder instance.</para>
            /// </summary>
            internal static enc.StructDecoder<Other> Decoder = new OtherDecoder();

            /// <summary>
            /// <para>Initializes a new instance of the <see cref="Other" /> class.</para>
            /// </summary>
            private Other()
            {
            }

            /// <summary>
            /// <para>A singleton instance of Other</para>
            /// </summary>
            public static readonly Other Instance = new Other();

            #region Encoder class

            /// <summary>
            /// <para>Encoder for  <see cref="Other" />.</para>
            /// </summary>
            private class OtherEncoder : enc.StructEncoder<Other>
            {
                /// <summary>
                /// <para>Encode fields of given value.</para>
                /// </summary>
                /// <param name="value">The value.</param>
                /// <param name="writer">The writer.</param>
                public override void EncodeFields(Other value, enc.IJsonWriter writer)
                {
                }
            }

            #endregion

            #region Decoder class

            /// <summary>
            /// <para>Decoder for  <see cref="Other" />.</para>
            /// </summary>
            private class OtherDecoder : enc.StructDecoder<Other>
            {
                /// <summary>
                /// <para>Create a new instance of type <see cref="Other" />.</para>
                /// </summary>
                /// <returns>The struct instance.</returns>
                protected override Other Create()
                {
                    return Other.Instance;
                }

            }

            #endregion
        }
    }
}
