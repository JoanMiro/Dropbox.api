// <auto-generated>
// Auto-generated by StoneAPI, do not modify.
// </auto-generated>

namespace Dropbox.Api.Team
{
    using sys = System;
    using col = System.Collections.Generic;
    using re = System.Text.RegularExpressions;

    using enc = Dropbox.Api.Stone;

    /// <summary>
    /// <para>Error returned when adding secondary emails fails.</para>
    /// </summary>
    public class AddSecondaryEmailsError
    {
        #pragma warning disable 108

        /// <summary>
        /// <para>The encoder instance.</para>
        /// </summary>
        internal static enc.StructEncoder<AddSecondaryEmailsError> Encoder = new AddSecondaryEmailsErrorEncoder();

        /// <summary>
        /// <para>The decoder instance.</para>
        /// </summary>
        internal static enc.StructDecoder<AddSecondaryEmailsError> Decoder = new AddSecondaryEmailsErrorDecoder();

        /// <summary>
        /// <para>Initializes a new instance of the <see cref="AddSecondaryEmailsError" />
        /// class.</para>
        /// </summary>
        public AddSecondaryEmailsError()
        {
        }

        /// <summary>
        /// <para>Gets a value indicating whether this instance is
        /// SecondaryEmailsDisabled</para>
        /// </summary>
        public bool IsSecondaryEmailsDisabled
        {
            get
            {
                return this is SecondaryEmailsDisabled;
            }
        }

        /// <summary>
        /// <para>Gets this instance as a SecondaryEmailsDisabled, or <c>null</c>.</para>
        /// </summary>
        public SecondaryEmailsDisabled AsSecondaryEmailsDisabled
        {
            get
            {
                return this as SecondaryEmailsDisabled;
            }
        }

        /// <summary>
        /// <para>Gets a value indicating whether this instance is TooManyEmails</para>
        /// </summary>
        public bool IsTooManyEmails
        {
            get
            {
                return this is TooManyEmails;
            }
        }

        /// <summary>
        /// <para>Gets this instance as a TooManyEmails, or <c>null</c>.</para>
        /// </summary>
        public TooManyEmails AsTooManyEmails
        {
            get
            {
                return this as TooManyEmails;
            }
        }

        /// <summary>
        /// <para>Gets a value indicating whether this instance is Other</para>
        /// </summary>
        public bool IsOther
        {
            get
            {
                return this is Other;
            }
        }

        /// <summary>
        /// <para>Gets this instance as a Other, or <c>null</c>.</para>
        /// </summary>
        public Other AsOther
        {
            get
            {
                return this as Other;
            }
        }

        #region Encoder class

        /// <summary>
        /// <para>Encoder for  <see cref="AddSecondaryEmailsError" />.</para>
        /// </summary>
        private class AddSecondaryEmailsErrorEncoder : enc.StructEncoder<AddSecondaryEmailsError>
        {
            /// <summary>
            /// <para>Encode fields of given value.</para>
            /// </summary>
            /// <param name="value">The value.</param>
            /// <param name="writer">The writer.</param>
            public override void EncodeFields(AddSecondaryEmailsError value, enc.IJsonWriter writer)
            {
                if (value is SecondaryEmailsDisabled)
                {
                    WriteProperty(".tag", "secondary_emails_disabled", writer, enc.StringEncoder.Instance);
                    SecondaryEmailsDisabled.Encoder.EncodeFields((SecondaryEmailsDisabled)value, writer);
                    return;
                }
                if (value is TooManyEmails)
                {
                    WriteProperty(".tag", "too_many_emails", writer, enc.StringEncoder.Instance);
                    TooManyEmails.Encoder.EncodeFields((TooManyEmails)value, writer);
                    return;
                }
                if (value is Other)
                {
                    WriteProperty(".tag", "other", writer, enc.StringEncoder.Instance);
                    Other.Encoder.EncodeFields((Other)value, writer);
                    return;
                }
                throw new sys.InvalidOperationException();
            }
        }

        #endregion

        #region Decoder class

        /// <summary>
        /// <para>Decoder for  <see cref="AddSecondaryEmailsError" />.</para>
        /// </summary>
        private class AddSecondaryEmailsErrorDecoder : enc.UnionDecoder<AddSecondaryEmailsError>
        {
            /// <summary>
            /// <para>Create a new instance of type <see cref="AddSecondaryEmailsError"
            /// />.</para>
            /// </summary>
            /// <returns>The struct instance.</returns>
            protected override AddSecondaryEmailsError Create()
            {
                return new AddSecondaryEmailsError();
            }

            /// <summary>
            /// <para>Decode based on given tag.</para>
            /// </summary>
            /// <param name="tag">The tag.</param>
            /// <param name="reader">The json reader.</param>
            /// <returns>The decoded object.</returns>
            protected override AddSecondaryEmailsError Decode(string tag, enc.IJsonReader reader)
            {
                switch (tag)
                {
                    case "secondary_emails_disabled":
                        return SecondaryEmailsDisabled.Decoder.DecodeFields(reader);
                    case "too_many_emails":
                        return TooManyEmails.Decoder.DecodeFields(reader);
                    default:
                        return Other.Decoder.DecodeFields(reader);
                }
            }
        }

        #endregion

        /// <summary>
        /// <para>Secondary emails are disabled for the team.</para>
        /// </summary>
        public sealed class SecondaryEmailsDisabled : AddSecondaryEmailsError
        {
            #pragma warning disable 108

            /// <summary>
            /// <para>The encoder instance.</para>
            /// </summary>
            internal static enc.StructEncoder<SecondaryEmailsDisabled> Encoder = new SecondaryEmailsDisabledEncoder();

            /// <summary>
            /// <para>The decoder instance.</para>
            /// </summary>
            internal static enc.StructDecoder<SecondaryEmailsDisabled> Decoder = new SecondaryEmailsDisabledDecoder();

            /// <summary>
            /// <para>Initializes a new instance of the <see cref="SecondaryEmailsDisabled" />
            /// class.</para>
            /// </summary>
            private SecondaryEmailsDisabled()
            {
            }

            /// <summary>
            /// <para>A singleton instance of SecondaryEmailsDisabled</para>
            /// </summary>
            public static readonly SecondaryEmailsDisabled Instance = new SecondaryEmailsDisabled();

            #region Encoder class

            /// <summary>
            /// <para>Encoder for  <see cref="SecondaryEmailsDisabled" />.</para>
            /// </summary>
            private class SecondaryEmailsDisabledEncoder : enc.StructEncoder<SecondaryEmailsDisabled>
            {
                /// <summary>
                /// <para>Encode fields of given value.</para>
                /// </summary>
                /// <param name="value">The value.</param>
                /// <param name="writer">The writer.</param>
                public override void EncodeFields(SecondaryEmailsDisabled value, enc.IJsonWriter writer)
                {
                }
            }

            #endregion

            #region Decoder class

            /// <summary>
            /// <para>Decoder for  <see cref="SecondaryEmailsDisabled" />.</para>
            /// </summary>
            private class SecondaryEmailsDisabledDecoder : enc.StructDecoder<SecondaryEmailsDisabled>
            {
                /// <summary>
                /// <para>Create a new instance of type <see cref="SecondaryEmailsDisabled"
                /// />.</para>
                /// </summary>
                /// <returns>The struct instance.</returns>
                protected override SecondaryEmailsDisabled Create()
                {
                    return SecondaryEmailsDisabled.Instance;
                }

            }

            #endregion
        }

        /// <summary>
        /// <para>A maximum of 20 secondary emails can be added in a single call.</para>
        /// </summary>
        public sealed class TooManyEmails : AddSecondaryEmailsError
        {
            #pragma warning disable 108

            /// <summary>
            /// <para>The encoder instance.</para>
            /// </summary>
            internal static enc.StructEncoder<TooManyEmails> Encoder = new TooManyEmailsEncoder();

            /// <summary>
            /// <para>The decoder instance.</para>
            /// </summary>
            internal static enc.StructDecoder<TooManyEmails> Decoder = new TooManyEmailsDecoder();

            /// <summary>
            /// <para>Initializes a new instance of the <see cref="TooManyEmails" />
            /// class.</para>
            /// </summary>
            private TooManyEmails()
            {
            }

            /// <summary>
            /// <para>A singleton instance of TooManyEmails</para>
            /// </summary>
            public static readonly TooManyEmails Instance = new TooManyEmails();

            #region Encoder class

            /// <summary>
            /// <para>Encoder for  <see cref="TooManyEmails" />.</para>
            /// </summary>
            private class TooManyEmailsEncoder : enc.StructEncoder<TooManyEmails>
            {
                /// <summary>
                /// <para>Encode fields of given value.</para>
                /// </summary>
                /// <param name="value">The value.</param>
                /// <param name="writer">The writer.</param>
                public override void EncodeFields(TooManyEmails value, enc.IJsonWriter writer)
                {
                }
            }

            #endregion

            #region Decoder class

            /// <summary>
            /// <para>Decoder for  <see cref="TooManyEmails" />.</para>
            /// </summary>
            private class TooManyEmailsDecoder : enc.StructDecoder<TooManyEmails>
            {
                /// <summary>
                /// <para>Create a new instance of type <see cref="TooManyEmails" />.</para>
                /// </summary>
                /// <returns>The struct instance.</returns>
                protected override TooManyEmails Create()
                {
                    return TooManyEmails.Instance;
                }

            }

            #endregion
        }

        /// <summary>
        /// <para>The other object</para>
        /// </summary>
        public sealed class Other : AddSecondaryEmailsError
        {
            #pragma warning disable 108

            /// <summary>
            /// <para>The encoder instance.</para>
            /// </summary>
            internal static enc.StructEncoder<Other> Encoder = new OtherEncoder();

            /// <summary>
            /// <para>The decoder instance.</para>
            /// </summary>
            internal static enc.StructDecoder<Other> Decoder = new OtherDecoder();

            /// <summary>
            /// <para>Initializes a new instance of the <see cref="Other" /> class.</para>
            /// </summary>
            private Other()
            {
            }

            /// <summary>
            /// <para>A singleton instance of Other</para>
            /// </summary>
            public static readonly Other Instance = new Other();

            #region Encoder class

            /// <summary>
            /// <para>Encoder for  <see cref="Other" />.</para>
            /// </summary>
            private class OtherEncoder : enc.StructEncoder<Other>
            {
                /// <summary>
                /// <para>Encode fields of given value.</para>
                /// </summary>
                /// <param name="value">The value.</param>
                /// <param name="writer">The writer.</param>
                public override void EncodeFields(Other value, enc.IJsonWriter writer)
                {
                }
            }

            #endregion

            #region Decoder class

            /// <summary>
            /// <para>Decoder for  <see cref="Other" />.</para>
            /// </summary>
            private class OtherDecoder : enc.StructDecoder<Other>
            {
                /// <summary>
                /// <para>Create a new instance of type <see cref="Other" />.</para>
                /// </summary>
                /// <returns>The struct instance.</returns>
                protected override Other Create()
                {
                    return Other.Instance;
                }

            }

            #endregion
        }
    }
}
