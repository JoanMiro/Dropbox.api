// <auto-generated>
// Auto-generated by StoneAPI, do not modify.
// </auto-generated>

namespace Dropbox.Api.Team
{
    using sys = System;
    using col = System.Collections.Generic;
    using re = System.Text.RegularExpressions;

    using enc = Dropbox.Api.Stone;

    /// <summary>
    /// <para>The members info object</para>
    /// </summary>
    /// <seealso cref="LegalHoldPolicy" />
    public class MembersInfo
    {
        #pragma warning disable 108

        /// <summary>
        /// <para>The encoder instance.</para>
        /// </summary>
        internal static enc.StructEncoder<MembersInfo> Encoder = new MembersInfoEncoder();

        /// <summary>
        /// <para>The decoder instance.</para>
        /// </summary>
        internal static enc.StructDecoder<MembersInfo> Decoder = new MembersInfoDecoder();

        /// <summary>
        /// <para>Initializes a new instance of the <see cref="MembersInfo" /> class.</para>
        /// </summary>
        /// <param name="teamMemberIds">Team member IDs of the users under this hold.</param>
        /// <param name="permanentlyDeletedUsers">The number of permanently deleted users that
        /// were under this hold.</param>
        public MembersInfo(col.IEnumerable<string> teamMemberIds,
                           ulong permanentlyDeletedUsers)
        {
            var teamMemberIdsList = enc.Util.ToList(teamMemberIds);

            if (teamMemberIds == null)
            {
                throw new sys.ArgumentNullException("teamMemberIds");
            }

            this.TeamMemberIds = teamMemberIdsList;
            this.PermanentlyDeletedUsers = permanentlyDeletedUsers;
        }

        /// <summary>
        /// <para>Initializes a new instance of the <see cref="MembersInfo" /> class.</para>
        /// </summary>
        /// <remarks>This is to construct an instance of the object when
        /// deserializing.</remarks>
        [sys.ComponentModel.EditorBrowsable(sys.ComponentModel.EditorBrowsableState.Never)]
        public MembersInfo()
        {
        }

        /// <summary>
        /// <para>Team member IDs of the users under this hold.</para>
        /// </summary>
        public col.IList<string> TeamMemberIds { get; protected set; }

        /// <summary>
        /// <para>The number of permanently deleted users that were under this hold.</para>
        /// </summary>
        public ulong PermanentlyDeletedUsers { get; protected set; }

        #region Encoder class

        /// <summary>
        /// <para>Encoder for  <see cref="MembersInfo" />.</para>
        /// </summary>
        private class MembersInfoEncoder : enc.StructEncoder<MembersInfo>
        {
            /// <summary>
            /// <para>Encode fields of given value.</para>
            /// </summary>
            /// <param name="value">The value.</param>
            /// <param name="writer">The writer.</param>
            public override void EncodeFields(MembersInfo value, enc.IJsonWriter writer)
            {
                WriteListProperty("team_member_ids", value.TeamMemberIds, writer, enc.StringEncoder.Instance);
                WriteProperty("permanently_deleted_users", value.PermanentlyDeletedUsers, writer, enc.UInt64Encoder.Instance);
            }
        }

        #endregion


        #region Decoder class

        /// <summary>
        /// <para>Decoder for  <see cref="MembersInfo" />.</para>
        /// </summary>
        private class MembersInfoDecoder : enc.StructDecoder<MembersInfo>
        {
            /// <summary>
            /// <para>Create a new instance of type <see cref="MembersInfo" />.</para>
            /// </summary>
            /// <returns>The struct instance.</returns>
            protected override MembersInfo Create()
            {
                return new MembersInfo();
            }

            /// <summary>
            /// <para>Set given field.</para>
            /// </summary>
            /// <param name="value">The field value.</param>
            /// <param name="fieldName">The field name.</param>
            /// <param name="reader">The json reader.</param>
            protected override void SetField(MembersInfo value, string fieldName, enc.IJsonReader reader)
            {
                switch (fieldName)
                {
                    case "team_member_ids":
                        value.TeamMemberIds = ReadList<string>(reader, enc.StringDecoder.Instance);
                        break;
                    case "permanently_deleted_users":
                        value.PermanentlyDeletedUsers = enc.UInt64Decoder.Instance.Decode(reader);
                        break;
                    default:
                        reader.Skip();
                        break;
                }
            }
        }

        #endregion
    }
}
