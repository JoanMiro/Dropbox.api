// <auto-generated>
// Auto-generated by StoneAPI, do not modify.
// </auto-generated>

namespace Dropbox.Api.TeamLog
{
    using sys = System;
    using col = System.Collections.Generic;
    using re = System.Text.RegularExpressions;

    using enc = Dropbox.Api.Stone;

    /// <summary>
    /// <para>Added members to a hold.</para>
    /// </summary>
    public class LegalHoldsAddMembersDetails
    {
        #pragma warning disable 108

        /// <summary>
        /// <para>The encoder instance.</para>
        /// </summary>
        internal static enc.StructEncoder<LegalHoldsAddMembersDetails> Encoder = new LegalHoldsAddMembersDetailsEncoder();

        /// <summary>
        /// <para>The decoder instance.</para>
        /// </summary>
        internal static enc.StructDecoder<LegalHoldsAddMembersDetails> Decoder = new LegalHoldsAddMembersDetailsDecoder();

        /// <summary>
        /// <para>Initializes a new instance of the <see cref="LegalHoldsAddMembersDetails" />
        /// class.</para>
        /// </summary>
        /// <param name="legalHoldId">Hold ID.</param>
        /// <param name="name">Hold name.</param>
        public LegalHoldsAddMembersDetails(string legalHoldId,
                                           string name)
        {
            if (legalHoldId == null)
            {
                throw new sys.ArgumentNullException("legalHoldId");
            }

            if (name == null)
            {
                throw new sys.ArgumentNullException("name");
            }

            this.LegalHoldId = legalHoldId;
            this.Name = name;
        }

        /// <summary>
        /// <para>Initializes a new instance of the <see cref="LegalHoldsAddMembersDetails" />
        /// class.</para>
        /// </summary>
        /// <remarks>This is to construct an instance of the object when
        /// deserializing.</remarks>
        [sys.ComponentModel.EditorBrowsable(sys.ComponentModel.EditorBrowsableState.Never)]
        public LegalHoldsAddMembersDetails()
        {
        }

        /// <summary>
        /// <para>Hold ID.</para>
        /// </summary>
        public string LegalHoldId { get; protected set; }

        /// <summary>
        /// <para>Hold name.</para>
        /// </summary>
        public string Name { get; protected set; }

        #region Encoder class

        /// <summary>
        /// <para>Encoder for  <see cref="LegalHoldsAddMembersDetails" />.</para>
        /// </summary>
        private class LegalHoldsAddMembersDetailsEncoder : enc.StructEncoder<LegalHoldsAddMembersDetails>
        {
            /// <summary>
            /// <para>Encode fields of given value.</para>
            /// </summary>
            /// <param name="value">The value.</param>
            /// <param name="writer">The writer.</param>
            public override void EncodeFields(LegalHoldsAddMembersDetails value, enc.IJsonWriter writer)
            {
                WriteProperty("legal_hold_id", value.LegalHoldId, writer, enc.StringEncoder.Instance);
                WriteProperty("name", value.Name, writer, enc.StringEncoder.Instance);
            }
        }

        #endregion


        #region Decoder class

        /// <summary>
        /// <para>Decoder for  <see cref="LegalHoldsAddMembersDetails" />.</para>
        /// </summary>
        private class LegalHoldsAddMembersDetailsDecoder : enc.StructDecoder<LegalHoldsAddMembersDetails>
        {
            /// <summary>
            /// <para>Create a new instance of type <see cref="LegalHoldsAddMembersDetails"
            /// />.</para>
            /// </summary>
            /// <returns>The struct instance.</returns>
            protected override LegalHoldsAddMembersDetails Create()
            {
                return new LegalHoldsAddMembersDetails();
            }

            /// <summary>
            /// <para>Set given field.</para>
            /// </summary>
            /// <param name="value">The field value.</param>
            /// <param name="fieldName">The field name.</param>
            /// <param name="reader">The json reader.</param>
            protected override void SetField(LegalHoldsAddMembersDetails value, string fieldName, enc.IJsonReader reader)
            {
                switch (fieldName)
                {
                    case "legal_hold_id":
                        value.LegalHoldId = enc.StringDecoder.Instance.Decode(reader);
                        break;
                    case "name":
                        value.Name = enc.StringDecoder.Instance.Decode(reader);
                        break;
                    default:
                        reader.Skip();
                        break;
                }
            }
        }

        #endregion
    }
}
