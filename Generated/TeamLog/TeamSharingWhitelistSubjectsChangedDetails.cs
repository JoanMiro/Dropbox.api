// <auto-generated>
// Auto-generated by StoneAPI, do not modify.
// </auto-generated>

namespace Dropbox.Api.TeamLog
{
    using sys = System;
    using col = System.Collections.Generic;
    using re = System.Text.RegularExpressions;

    using enc = Dropbox.Api.Stone;

    /// <summary>
    /// <para>Edited the approved list for sharing externally.</para>
    /// </summary>
    public class TeamSharingWhitelistSubjectsChangedDetails
    {
        #pragma warning disable 108

        /// <summary>
        /// <para>The encoder instance.</para>
        /// </summary>
        internal static enc.StructEncoder<TeamSharingWhitelistSubjectsChangedDetails> Encoder = new TeamSharingWhitelistSubjectsChangedDetailsEncoder();

        /// <summary>
        /// <para>The decoder instance.</para>
        /// </summary>
        internal static enc.StructDecoder<TeamSharingWhitelistSubjectsChangedDetails> Decoder = new TeamSharingWhitelistSubjectsChangedDetailsDecoder();

        /// <summary>
        /// <para>Initializes a new instance of the <see
        /// cref="TeamSharingWhitelistSubjectsChangedDetails" /> class.</para>
        /// </summary>
        /// <param name="addedWhitelistSubjects">Domains or emails added to the approved list
        /// for sharing externally.</param>
        /// <param name="removedWhitelistSubjects">Domains or emails removed from the approved
        /// list for sharing externally.</param>
        public TeamSharingWhitelistSubjectsChangedDetails(col.IEnumerable<string> addedWhitelistSubjects,
                                                          col.IEnumerable<string> removedWhitelistSubjects)
        {
            var addedWhitelistSubjectsList = enc.Util.ToList(addedWhitelistSubjects);

            if (addedWhitelistSubjects == null)
            {
                throw new sys.ArgumentNullException("addedWhitelistSubjects");
            }

            var removedWhitelistSubjectsList = enc.Util.ToList(removedWhitelistSubjects);

            if (removedWhitelistSubjects == null)
            {
                throw new sys.ArgumentNullException("removedWhitelistSubjects");
            }

            this.AddedWhitelistSubjects = addedWhitelistSubjectsList;
            this.RemovedWhitelistSubjects = removedWhitelistSubjectsList;
        }

        /// <summary>
        /// <para>Initializes a new instance of the <see
        /// cref="TeamSharingWhitelistSubjectsChangedDetails" /> class.</para>
        /// </summary>
        /// <remarks>This is to construct an instance of the object when
        /// deserializing.</remarks>
        [sys.ComponentModel.EditorBrowsable(sys.ComponentModel.EditorBrowsableState.Never)]
        public TeamSharingWhitelistSubjectsChangedDetails()
        {
        }

        /// <summary>
        /// <para>Domains or emails added to the approved list for sharing externally.</para>
        /// </summary>
        public col.IList<string> AddedWhitelistSubjects { get; protected set; }

        /// <summary>
        /// <para>Domains or emails removed from the approved list for sharing
        /// externally.</para>
        /// </summary>
        public col.IList<string> RemovedWhitelistSubjects { get; protected set; }

        #region Encoder class

        /// <summary>
        /// <para>Encoder for  <see cref="TeamSharingWhitelistSubjectsChangedDetails"
        /// />.</para>
        /// </summary>
        private class TeamSharingWhitelistSubjectsChangedDetailsEncoder : enc.StructEncoder<TeamSharingWhitelistSubjectsChangedDetails>
        {
            /// <summary>
            /// <para>Encode fields of given value.</para>
            /// </summary>
            /// <param name="value">The value.</param>
            /// <param name="writer">The writer.</param>
            public override void EncodeFields(TeamSharingWhitelistSubjectsChangedDetails value, enc.IJsonWriter writer)
            {
                WriteListProperty("added_whitelist_subjects", value.AddedWhitelistSubjects, writer, enc.StringEncoder.Instance);
                WriteListProperty("removed_whitelist_subjects", value.RemovedWhitelistSubjects, writer, enc.StringEncoder.Instance);
            }
        }

        #endregion


        #region Decoder class

        /// <summary>
        /// <para>Decoder for  <see cref="TeamSharingWhitelistSubjectsChangedDetails"
        /// />.</para>
        /// </summary>
        private class TeamSharingWhitelistSubjectsChangedDetailsDecoder : enc.StructDecoder<TeamSharingWhitelistSubjectsChangedDetails>
        {
            /// <summary>
            /// <para>Create a new instance of type <see
            /// cref="TeamSharingWhitelistSubjectsChangedDetails" />.</para>
            /// </summary>
            /// <returns>The struct instance.</returns>
            protected override TeamSharingWhitelistSubjectsChangedDetails Create()
            {
                return new TeamSharingWhitelistSubjectsChangedDetails();
            }

            /// <summary>
            /// <para>Set given field.</para>
            /// </summary>
            /// <param name="value">The field value.</param>
            /// <param name="fieldName">The field name.</param>
            /// <param name="reader">The json reader.</param>
            protected override void SetField(TeamSharingWhitelistSubjectsChangedDetails value, string fieldName, enc.IJsonReader reader)
            {
                switch (fieldName)
                {
                    case "added_whitelist_subjects":
                        value.AddedWhitelistSubjects = ReadList<string>(reader, enc.StringDecoder.Instance);
                        break;
                    case "removed_whitelist_subjects":
                        value.RemovedWhitelistSubjects = ReadList<string>(reader, enc.StringDecoder.Instance);
                        break;
                    default:
                        reader.Skip();
                        break;
                }
            }
        }

        #endregion
    }
}
