// <auto-generated>
// Auto-generated by StoneAPI, do not modify.
// </auto-generated>

namespace Dropbox.Api.Files
{
    using sys = System;
    using col = System.Collections.Generic;
    using re = System.Text.RegularExpressions;

    using enc = Dropbox.Api.Stone;

    /// <summary>
    /// <para>The shared link file info object</para>
    /// </summary>
    public class SharedLinkFileInfo
    {
        #pragma warning disable 108

        /// <summary>
        /// <para>The encoder instance.</para>
        /// </summary>
        internal static enc.StructEncoder<SharedLinkFileInfo> Encoder = new SharedLinkFileInfoEncoder();

        /// <summary>
        /// <para>The decoder instance.</para>
        /// </summary>
        internal static enc.StructDecoder<SharedLinkFileInfo> Decoder = new SharedLinkFileInfoDecoder();

        /// <summary>
        /// <para>Initializes a new instance of the <see cref="SharedLinkFileInfo" />
        /// class.</para>
        /// </summary>
        /// <param name="url">The shared link corresponding to either a file or shared link to
        /// a folder. If it is for a folder shared link, we use the path param to determine for
        /// which file in the folder the view is for.</param>
        /// <param name="path">The path corresponding to a file in a shared link to a folder.
        /// Required for shared links to folders.</param>
        /// <param name="password">Password for the shared link. Required for
        /// password-protected shared links to files  unless it can be read from a
        /// cookie.</param>
        public SharedLinkFileInfo(string url,
                                  string path = null,
                                  string password = null)
        {
            if (url == null)
            {
                throw new sys.ArgumentNullException("url");
            }

            this.Url = url;
            this.Path = path;
            this.Password = password;
        }

        /// <summary>
        /// <para>Initializes a new instance of the <see cref="SharedLinkFileInfo" />
        /// class.</para>
        /// </summary>
        /// <remarks>This is to construct an instance of the object when
        /// deserializing.</remarks>
        [sys.ComponentModel.EditorBrowsable(sys.ComponentModel.EditorBrowsableState.Never)]
        public SharedLinkFileInfo()
        {
        }

        /// <summary>
        /// <para>The shared link corresponding to either a file or shared link to a folder. If
        /// it is for a folder shared link, we use the path param to determine for which file
        /// in the folder the view is for.</para>
        /// </summary>
        public string Url { get; protected set; }

        /// <summary>
        /// <para>The path corresponding to a file in a shared link to a folder. Required for
        /// shared links to folders.</para>
        /// </summary>
        public string Path { get; protected set; }

        /// <summary>
        /// <para>Password for the shared link. Required for password-protected shared links to
        /// files  unless it can be read from a cookie.</para>
        /// </summary>
        public string Password { get; protected set; }

        #region Encoder class

        /// <summary>
        /// <para>Encoder for  <see cref="SharedLinkFileInfo" />.</para>
        /// </summary>
        private class SharedLinkFileInfoEncoder : enc.StructEncoder<SharedLinkFileInfo>
        {
            /// <summary>
            /// <para>Encode fields of given value.</para>
            /// </summary>
            /// <param name="value">The value.</param>
            /// <param name="writer">The writer.</param>
            public override void EncodeFields(SharedLinkFileInfo value, enc.IJsonWriter writer)
            {
                WriteProperty("url", value.Url, writer, enc.StringEncoder.Instance);
                if (value.Path != null)
                {
                    WriteProperty("path", value.Path, writer, enc.StringEncoder.Instance);
                }
                if (value.Password != null)
                {
                    WriteProperty("password", value.Password, writer, enc.StringEncoder.Instance);
                }
            }
        }

        #endregion


        #region Decoder class

        /// <summary>
        /// <para>Decoder for  <see cref="SharedLinkFileInfo" />.</para>
        /// </summary>
        private class SharedLinkFileInfoDecoder : enc.StructDecoder<SharedLinkFileInfo>
        {
            /// <summary>
            /// <para>Create a new instance of type <see cref="SharedLinkFileInfo" />.</para>
            /// </summary>
            /// <returns>The struct instance.</returns>
            protected override SharedLinkFileInfo Create()
            {
                return new SharedLinkFileInfo();
            }

            /// <summary>
            /// <para>Set given field.</para>
            /// </summary>
            /// <param name="value">The field value.</param>
            /// <param name="fieldName">The field name.</param>
            /// <param name="reader">The json reader.</param>
            protected override void SetField(SharedLinkFileInfo value, string fieldName, enc.IJsonReader reader)
            {
                switch (fieldName)
                {
                    case "url":
                        value.Url = enc.StringDecoder.Instance.Decode(reader);
                        break;
                    case "path":
                        value.Path = enc.StringDecoder.Instance.Decode(reader);
                        break;
                    case "password":
                        value.Password = enc.StringDecoder.Instance.Decode(reader);
                        break;
                    default:
                        reader.Skip();
                        break;
                }
            }
        }

        #endregion
    }
}
