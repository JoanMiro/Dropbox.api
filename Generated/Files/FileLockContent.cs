// <auto-generated>
// Auto-generated by StoneAPI, do not modify.
// </auto-generated>

namespace Dropbox.Api.Files
{
    using sys = System;
    using col = System.Collections.Generic;
    using re = System.Text.RegularExpressions;

    using enc = Dropbox.Api.Stone;

    /// <summary>
    /// <para>The file lock content object</para>
    /// </summary>
    public class FileLockContent
    {
        #pragma warning disable 108

        /// <summary>
        /// <para>The encoder instance.</para>
        /// </summary>
        internal static enc.StructEncoder<FileLockContent> Encoder = new FileLockContentEncoder();

        /// <summary>
        /// <para>The decoder instance.</para>
        /// </summary>
        internal static enc.StructDecoder<FileLockContent> Decoder = new FileLockContentDecoder();

        /// <summary>
        /// <para>Initializes a new instance of the <see cref="FileLockContent" />
        /// class.</para>
        /// </summary>
        public FileLockContent()
        {
        }

        /// <summary>
        /// <para>Gets a value indicating whether this instance is Unlocked</para>
        /// </summary>
        public bool IsUnlocked
        {
            get
            {
                return this is Unlocked;
            }
        }

        /// <summary>
        /// <para>Gets this instance as a Unlocked, or <c>null</c>.</para>
        /// </summary>
        public Unlocked AsUnlocked
        {
            get
            {
                return this as Unlocked;
            }
        }

        /// <summary>
        /// <para>Gets a value indicating whether this instance is SingleUser</para>
        /// </summary>
        public bool IsSingleUser
        {
            get
            {
                return this is SingleUser;
            }
        }

        /// <summary>
        /// <para>Gets this instance as a SingleUser, or <c>null</c>.</para>
        /// </summary>
        public SingleUser AsSingleUser
        {
            get
            {
                return this as SingleUser;
            }
        }

        /// <summary>
        /// <para>Gets a value indicating whether this instance is Other</para>
        /// </summary>
        public bool IsOther
        {
            get
            {
                return this is Other;
            }
        }

        /// <summary>
        /// <para>Gets this instance as a Other, or <c>null</c>.</para>
        /// </summary>
        public Other AsOther
        {
            get
            {
                return this as Other;
            }
        }

        #region Encoder class

        /// <summary>
        /// <para>Encoder for  <see cref="FileLockContent" />.</para>
        /// </summary>
        private class FileLockContentEncoder : enc.StructEncoder<FileLockContent>
        {
            /// <summary>
            /// <para>Encode fields of given value.</para>
            /// </summary>
            /// <param name="value">The value.</param>
            /// <param name="writer">The writer.</param>
            public override void EncodeFields(FileLockContent value, enc.IJsonWriter writer)
            {
                if (value is Unlocked)
                {
                    WriteProperty(".tag", "unlocked", writer, enc.StringEncoder.Instance);
                    Unlocked.Encoder.EncodeFields((Unlocked)value, writer);
                    return;
                }
                if (value is SingleUser)
                {
                    WriteProperty(".tag", "single_user", writer, enc.StringEncoder.Instance);
                    SingleUser.Encoder.EncodeFields((SingleUser)value, writer);
                    return;
                }
                if (value is Other)
                {
                    WriteProperty(".tag", "other", writer, enc.StringEncoder.Instance);
                    Other.Encoder.EncodeFields((Other)value, writer);
                    return;
                }
                throw new sys.InvalidOperationException();
            }
        }

        #endregion

        #region Decoder class

        /// <summary>
        /// <para>Decoder for  <see cref="FileLockContent" />.</para>
        /// </summary>
        private class FileLockContentDecoder : enc.UnionDecoder<FileLockContent>
        {
            /// <summary>
            /// <para>Create a new instance of type <see cref="FileLockContent" />.</para>
            /// </summary>
            /// <returns>The struct instance.</returns>
            protected override FileLockContent Create()
            {
                return new FileLockContent();
            }

            /// <summary>
            /// <para>Decode based on given tag.</para>
            /// </summary>
            /// <param name="tag">The tag.</param>
            /// <param name="reader">The json reader.</param>
            /// <returns>The decoded object.</returns>
            protected override FileLockContent Decode(string tag, enc.IJsonReader reader)
            {
                switch (tag)
                {
                    case "unlocked":
                        return Unlocked.Decoder.DecodeFields(reader);
                    case "single_user":
                        return SingleUser.Decoder.DecodeFields(reader);
                    default:
                        return Other.Decoder.DecodeFields(reader);
                }
            }
        }

        #endregion

        /// <summary>
        /// <para>Empty type to indicate no lock.</para>
        /// </summary>
        public sealed class Unlocked : FileLockContent
        {
            #pragma warning disable 108

            /// <summary>
            /// <para>The encoder instance.</para>
            /// </summary>
            internal static enc.StructEncoder<Unlocked> Encoder = new UnlockedEncoder();

            /// <summary>
            /// <para>The decoder instance.</para>
            /// </summary>
            internal static enc.StructDecoder<Unlocked> Decoder = new UnlockedDecoder();

            /// <summary>
            /// <para>Initializes a new instance of the <see cref="Unlocked" /> class.</para>
            /// </summary>
            private Unlocked()
            {
            }

            /// <summary>
            /// <para>A singleton instance of Unlocked</para>
            /// </summary>
            public static readonly Unlocked Instance = new Unlocked();

            #region Encoder class

            /// <summary>
            /// <para>Encoder for  <see cref="Unlocked" />.</para>
            /// </summary>
            private class UnlockedEncoder : enc.StructEncoder<Unlocked>
            {
                /// <summary>
                /// <para>Encode fields of given value.</para>
                /// </summary>
                /// <param name="value">The value.</param>
                /// <param name="writer">The writer.</param>
                public override void EncodeFields(Unlocked value, enc.IJsonWriter writer)
                {
                }
            }

            #endregion

            #region Decoder class

            /// <summary>
            /// <para>Decoder for  <see cref="Unlocked" />.</para>
            /// </summary>
            private class UnlockedDecoder : enc.StructDecoder<Unlocked>
            {
                /// <summary>
                /// <para>Create a new instance of type <see cref="Unlocked" />.</para>
                /// </summary>
                /// <returns>The struct instance.</returns>
                protected override Unlocked Create()
                {
                    return Unlocked.Instance;
                }

            }

            #endregion
        }

        /// <summary>
        /// <para>A lock held by a single user.</para>
        /// </summary>
        public sealed class SingleUser : FileLockContent
        {
            #pragma warning disable 108

            /// <summary>
            /// <para>The encoder instance.</para>
            /// </summary>
            internal static enc.StructEncoder<SingleUser> Encoder = new SingleUserEncoder();

            /// <summary>
            /// <para>The decoder instance.</para>
            /// </summary>
            internal static enc.StructDecoder<SingleUser> Decoder = new SingleUserDecoder();

            /// <summary>
            /// <para>Initializes a new instance of the <see cref="SingleUser" /> class.</para>
            /// </summary>
            /// <param name="value">The value</param>
            public SingleUser(SingleUserLock value)
            {
                this.Value = value;
            }
            /// <summary>
            /// <para>Initializes a new instance of the <see cref="SingleUser" /> class.</para>
            /// </summary>
            private SingleUser()
            {
            }

            /// <summary>
            /// <para>Gets the value of this instance.</para>
            /// </summary>
            public SingleUserLock Value { get; private set; }

            #region Encoder class

            /// <summary>
            /// <para>Encoder for  <see cref="SingleUser" />.</para>
            /// </summary>
            private class SingleUserEncoder : enc.StructEncoder<SingleUser>
            {
                /// <summary>
                /// <para>Encode fields of given value.</para>
                /// </summary>
                /// <param name="value">The value.</param>
                /// <param name="writer">The writer.</param>
                public override void EncodeFields(SingleUser value, enc.IJsonWriter writer)
                {
                    WriteProperty("single_user", value.Value, writer, global::Dropbox.Api.Files.SingleUserLock.Encoder);
                }
            }

            #endregion

            #region Decoder class

            /// <summary>
            /// <para>Decoder for  <see cref="SingleUser" />.</para>
            /// </summary>
            private class SingleUserDecoder : enc.StructDecoder<SingleUser>
            {
                /// <summary>
                /// <para>Create a new instance of type <see cref="SingleUser" />.</para>
                /// </summary>
                /// <returns>The struct instance.</returns>
                protected override SingleUser Create()
                {
                    return new SingleUser();
                }

                /// <summary>
                /// <para>Decode fields without ensuring start and end object.</para>
                /// </summary>
                /// <param name="reader">The json reader.</param>
                /// <returns>The decoded object.</returns>
                public override SingleUser DecodeFields(enc.IJsonReader reader)
                {
                    return new SingleUser(global::Dropbox.Api.Files.SingleUserLock.Decoder.DecodeFields(reader));
                }
            }

            #endregion
        }

        /// <summary>
        /// <para>The other object</para>
        /// </summary>
        public sealed class Other : FileLockContent
        {
            #pragma warning disable 108

            /// <summary>
            /// <para>The encoder instance.</para>
            /// </summary>
            internal static enc.StructEncoder<Other> Encoder = new OtherEncoder();

            /// <summary>
            /// <para>The decoder instance.</para>
            /// </summary>
            internal static enc.StructDecoder<Other> Decoder = new OtherDecoder();

            /// <summary>
            /// <para>Initializes a new instance of the <see cref="Other" /> class.</para>
            /// </summary>
            private Other()
            {
            }

            /// <summary>
            /// <para>A singleton instance of Other</para>
            /// </summary>
            public static readonly Other Instance = new Other();

            #region Encoder class

            /// <summary>
            /// <para>Encoder for  <see cref="Other" />.</para>
            /// </summary>
            private class OtherEncoder : enc.StructEncoder<Other>
            {
                /// <summary>
                /// <para>Encode fields of given value.</para>
                /// </summary>
                /// <param name="value">The value.</param>
                /// <param name="writer">The writer.</param>
                public override void EncodeFields(Other value, enc.IJsonWriter writer)
                {
                }
            }

            #endregion

            #region Decoder class

            /// <summary>
            /// <para>Decoder for  <see cref="Other" />.</para>
            /// </summary>
            private class OtherDecoder : enc.StructDecoder<Other>
            {
                /// <summary>
                /// <para>Create a new instance of type <see cref="Other" />.</para>
                /// </summary>
                /// <returns>The struct instance.</returns>
                protected override Other Create()
                {
                    return Other.Instance;
                }

            }

            #endregion
        }
    }
}
