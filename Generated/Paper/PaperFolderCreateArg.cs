// <auto-generated>
// Auto-generated by StoneAPI, do not modify.
// </auto-generated>

namespace Dropbox.Api.Paper
{
    using sys = System;
    using col = System.Collections.Generic;
    using re = System.Text.RegularExpressions;

    using enc = Dropbox.Api.Stone;

    /// <summary>
    /// <para>The paper folder create arg object</para>
    /// </summary>
    public class PaperFolderCreateArg
    {
        #pragma warning disable 108

        /// <summary>
        /// <para>The encoder instance.</para>
        /// </summary>
        internal static enc.StructEncoder<PaperFolderCreateArg> Encoder = new PaperFolderCreateArgEncoder();

        /// <summary>
        /// <para>The decoder instance.</para>
        /// </summary>
        internal static enc.StructDecoder<PaperFolderCreateArg> Decoder = new PaperFolderCreateArgDecoder();

        /// <summary>
        /// <para>Initializes a new instance of the <see cref="PaperFolderCreateArg" />
        /// class.</para>
        /// </summary>
        /// <param name="name">The name of the new Paper folder.</param>
        /// <param name="parentFolderId">The encrypted Paper folder Id where the new Paper
        /// folder should be created. The API user has to have write access to this folder or
        /// error is thrown. If not supplied, the new folder will be created at top
        /// level.</param>
        /// <param name="isTeamFolder">Whether the folder to be created should be a team
        /// folder. This value will be ignored if parent_folder_id is supplied, as the new
        /// folder will inherit the type (private or team folder) from its parent. We will by
        /// default create a top-level private folder if both parent_folder_id and
        /// is_team_folder are not supplied.</param>
        public PaperFolderCreateArg(string name,
                                    string parentFolderId = null,
                                    bool? isTeamFolder = null)
        {
            if (name == null)
            {
                throw new sys.ArgumentNullException("name");
            }

            this.Name = name;
            this.ParentFolderId = parentFolderId;
            this.IsTeamFolder = isTeamFolder;
        }

        /// <summary>
        /// <para>Initializes a new instance of the <see cref="PaperFolderCreateArg" />
        /// class.</para>
        /// </summary>
        /// <remarks>This is to construct an instance of the object when
        /// deserializing.</remarks>
        [sys.ComponentModel.EditorBrowsable(sys.ComponentModel.EditorBrowsableState.Never)]
        public PaperFolderCreateArg()
        {
        }

        /// <summary>
        /// <para>The name of the new Paper folder.</para>
        /// </summary>
        public string Name { get; protected set; }

        /// <summary>
        /// <para>The encrypted Paper folder Id where the new Paper folder should be created.
        /// The API user has to have write access to this folder or error is thrown. If not
        /// supplied, the new folder will be created at top level.</para>
        /// </summary>
        public string ParentFolderId { get; protected set; }

        /// <summary>
        /// <para>Whether the folder to be created should be a team folder. This value will be
        /// ignored if parent_folder_id is supplied, as the new folder will inherit the type
        /// (private or team folder) from its parent. We will by default create a top-level
        /// private folder if both parent_folder_id and is_team_folder are not supplied.</para>
        /// </summary>
        public bool? IsTeamFolder { get; protected set; }

        #region Encoder class

        /// <summary>
        /// <para>Encoder for  <see cref="PaperFolderCreateArg" />.</para>
        /// </summary>
        private class PaperFolderCreateArgEncoder : enc.StructEncoder<PaperFolderCreateArg>
        {
            /// <summary>
            /// <para>Encode fields of given value.</para>
            /// </summary>
            /// <param name="value">The value.</param>
            /// <param name="writer">The writer.</param>
            public override void EncodeFields(PaperFolderCreateArg value, enc.IJsonWriter writer)
            {
                WriteProperty("name", value.Name, writer, enc.StringEncoder.Instance);
                if (value.ParentFolderId != null)
                {
                    WriteProperty("parent_folder_id", value.ParentFolderId, writer, enc.StringEncoder.Instance);
                }
                if (value.IsTeamFolder != null)
                {
                    WriteProperty("is_team_folder", value.IsTeamFolder.Value, writer, enc.BooleanEncoder.Instance);
                }
            }
        }

        #endregion


        #region Decoder class

        /// <summary>
        /// <para>Decoder for  <see cref="PaperFolderCreateArg" />.</para>
        /// </summary>
        private class PaperFolderCreateArgDecoder : enc.StructDecoder<PaperFolderCreateArg>
        {
            /// <summary>
            /// <para>Create a new instance of type <see cref="PaperFolderCreateArg" />.</para>
            /// </summary>
            /// <returns>The struct instance.</returns>
            protected override PaperFolderCreateArg Create()
            {
                return new PaperFolderCreateArg();
            }

            /// <summary>
            /// <para>Set given field.</para>
            /// </summary>
            /// <param name="value">The field value.</param>
            /// <param name="fieldName">The field name.</param>
            /// <param name="reader">The json reader.</param>
            protected override void SetField(PaperFolderCreateArg value, string fieldName, enc.IJsonReader reader)
            {
                switch (fieldName)
                {
                    case "name":
                        value.Name = enc.StringDecoder.Instance.Decode(reader);
                        break;
                    case "parent_folder_id":
                        value.ParentFolderId = enc.StringDecoder.Instance.Decode(reader);
                        break;
                    case "is_team_folder":
                        value.IsTeamFolder = enc.BooleanDecoder.Instance.Decode(reader);
                        break;
                    default:
                        reader.Skip();
                        break;
                }
            }
        }

        #endregion
    }
}
